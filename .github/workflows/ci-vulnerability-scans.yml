# GitHub Actions CI workflow that runs vulnerability scans on the application's Docker image
# to ensure images built are secure before they are deployed. 

# NOTE: The workflow isn't able to pass the docker image between jobs, so each builds the image.
#       A future PR will pass the image between the scans to reduce overhead and increase speed
name: CI Vulnerability Scans

on:
  push:
    branches:
      - main
    paths:
      - app/**
      - .grype.yml
      - .hadolint.yaml
      - .trivyignore
  pull_request:
    paths:
      - app/**
      - .grype.yml
      - .hadolint.yaml
      - .trivyignore

jobs:
  hadolint-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Scans Dockerfile for any bad practices or issues
      - name: Scan Dockerfile by hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: app/Dockerfile
          format: json
          failure-threshold: warning

  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build and tag Docker image for scanning
        id: build-image
        run: |
          make release-build
          IMAGE_NAME=$(make release-image-name)
          IMAGE_TAG=$(make release-image-tag)
          echo "image=$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Run Trivy vulnerability scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "image" # Scan type, image or fs
          image-ref: ${{ steps.build-image.outputs.image }}
          format: "table" # Can be table, json, sarif, or github
          exit-code: "1" # Exit code to return if any vulnerabilities are found
          ignore-unfixed: true # Ignore unpatched/unfixed vulnerabilities
          vuln-type: "os" # Can be os or library, depending on the type of scan you want to run
          security-checks: "vuln,secret" # Can be any combo of vuln, secret, and config

  anchore-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build and tag Docker image for scanning
        id: build-image
        run: |
          make release-build
          IMAGE_NAME=$(make release-image-name)
          IMAGE_TAG=$(make release-image-tag)
          echo "image=$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Run Anchore vulnerability scan
        uses: anchore/scan-action@v3
        with:
          image: ${{ steps.build-image.outputs.image }}
          severity-cutoff: "negligible" # Will ignore any findings that are negligible or lower
          output-format: "table" # Can be table, json, or sarif

  dockle-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build and tag Docker image for scanning
        id: build-image
        run: |
          make release-build
          IMAGE_NAME=$(make release-image-name)
          IMAGE_TAG=$(make release-image-tag)
          echo "image=$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # Dockle doesn't allow you to have an ignore file for the DOCKLE_ACCEPT_FILES
      # variable, this will save the variable in this file to env for Dockle
      - name: Set any acceptable Dockle files
        run: |
          if grep -q "^DOCKLE_ACCEPT_FILES=.*" .dockleconfig; then
            grep -s '^DOCKLE_ACCEPT_FILES=' .dockleconfig >> $GITHUB_ENV
          fi

      - name: Run Dockle container linter
        uses: hands-lab/dockle-action@v1
        with:
          image: ${{ steps.build-image.outputs.image }}
          exit-code: '1'
          exit-level: WARN
