#!/bin/bash
# -----------------------------------------------------------------------------
# Create or update a temporary environment that will exist while a pull request
# is open.
#
# Positional parameters:
#   app_name (required) â€“ the name of subdirectory of /infra that holds the
#     application's infrastructure code.
#   environment - the name of the application environment (e.g. dev, staging, prod)
#   pr_number - the pull request number in GitHub
#   image_tag - the commit hash to deploy for the temporary environment
# -----------------------------------------------------------------------------
set -euo pipefail

app_name="$1"
environment="$2"
pr_number="$3"
image_tag="$4"

workspace="p-${pr_number}"

echo "::group::Initialize Terraform with backend for environment: ${environment}"
terraform -chdir="infra/${app_name}/service" init -backend-config="${environment}.s3.tfbackend"
echo "::endgroup::"

echo "Select or create Terraform workspace: ${workspace}"
terraform -chdir="infra/${app_name}/service" workspace select -or-create "${workspace}"

echo "::group::Apply changes to environment using image tag: ${image_tag}"
terraform -chdir="infra/${app_name}/service" apply -input=false -auto-approve -var="environment_name=${environment}" -var="image_tag=${image_tag}"
echo "::endgroup::"

cluster_name="$(terraform -chdir="infra/$app_name/service" output -raw service_cluster_name)"
service_name="$(terraform -chdir="infra/$app_name/service" output -raw service_name)"
echo "Wait for service ${service_name} to become stable"
aws ecs wait services-stable --cluster "${cluster_name}" --services "${service_name}"

echo "Post comment to PR with service endpoint"
service_endpoint="$(terraform -chdir="infra/${app_name}/service" output -raw service_endpoint)"
gh pr comment "${pr_number}" -b "Updated PR environment at ${service_endpoint}"
